-- MySQL Script generated by MySQL Workbench
-- 03/08/15 20:09:56
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema proyectolpii
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema proyectolpii
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `proyectolpii` DEFAULT CHARACTER SET utf8 ;
USE `proyectolpii` ;

-- -----------------------------------------------------
-- Table `proyectolpii`.`rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`rol` (
  `idRol` CHAR(5) NOT NULL,
  `gestionarLES` TINYINT(1) NULL DEFAULT NULL,
  `gestionarRES` TINYINT(1) NULL DEFAULT NULL,
  `verificarLES` TINYINT(1) NULL DEFAULT NULL,
  `verificarRES` TINYINT(1) NULL DEFAULT NULL,
  `visarRES` TINYINT(1) NULL DEFAULT NULL,
  `listarLES` TINYINT(1) NULL DEFAULT NULL,
  `listarRES` TINYINT(1) NULL DEFAULT NULL,
  `mantenimiento` TINYINT(1) NULL DEFAULT NULL,
  `reporte` TINYINT(1) NULL DEFAULT NULL,
  PRIMARY KEY (`idRol`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `proyectolpii`.`cargo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`cargo` (
  `idCargo` CHAR(6) NOT NULL,
  `descripcion` VARCHAR(45) NULL DEFAULT NULL,
  `sueldo` DOUBLE NULL DEFAULT NULL,
  `idRol` CHAR(5) NOT NULL,
  PRIMARY KEY (`idCargo`),
  INDEX `fk_Cargo_Rol1_idx` (`idRol` ASC),
  CONSTRAINT `fk_Cargo_Rol1`
    FOREIGN KEY (`idRol`)
    REFERENCES `proyectolpii`.`rol` (`idRol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `proyectolpii`.`estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`estado` (
  `idestado` INT(11) NOT NULL,
  `descripcion` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`idestado`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `proyectolpii`.`empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`empleado` (
  `idEmpleado` CHAR(6) NOT NULL,
  `nDNI` CHAR(8) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellidoP` VARCHAR(45) NOT NULL,
  `apellidoM` VARCHAR(45) NOT NULL,
  `fechaNacimiento` DATE NOT NULL,
  `telefono` CHAR(11) NOT NULL,
  `seguroSocial` CHAR(11) NOT NULL,
  `idCargo` CHAR(6) NOT NULL,
  `idestado` INT(11) NOT NULL,
  `foto` MEDIUMBLOB NULL DEFAULT NULL,
  `fechaIngreso` DATE NULL DEFAULT NULL,
  `usuario` VARCHAR(45) NULL DEFAULT NULL,
  `password` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`idEmpleado`),
  INDEX `fk_Asalariado_Cargo_idx` (`idCargo` ASC),
  INDEX `fk_Asalariado_estado1_idx` (`idestado` ASC),
  CONSTRAINT `fk_Asalariado_Cargo`
    FOREIGN KEY (`idCargo`)
    REFERENCES `proyectolpii`.`cargo` (`idCargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Asalariado_estado1`
    FOREIGN KEY (`idestado`)
    REFERENCES `proyectolpii`.`estado` (`idestado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `proyectolpii`.`les`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`les` (
  `idLES` CHAR(6) NOT NULL,
  `diagnostico` VARCHAR(45) NULL DEFAULT NULL,
  `fechaInicioDes` DATE NULL DEFAULT NULL,
  `fechaFinDes` DATE NULL DEFAULT NULL,
  `documento` LONGBLOB NULL DEFAULT NULL,
  `cantDias` INT(11) NULL DEFAULT NULL,
  `motivoLicencia` VARCHAR(45) NULL DEFAULT NULL,
  `descripcionMotivo` VARCHAR(45) NULL DEFAULT NULL,
  `fechaHora` DATETIME NULL DEFAULT NULL,
  `idEmpleado` CHAR(6) NOT NULL,
  `idestado` INT(11) NOT NULL,
  `pdf` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idLES`),
  INDEX `fk_LES_Asalariado1_idx` (`idEmpleado` ASC),
  INDEX `fk_LES_estado1_idx` (`idestado` ASC),
  CONSTRAINT `fk_LES_Asalariado1`
    FOREIGN KEY (`idEmpleado`)
    REFERENCES `proyectolpii`.`empleado` (`idEmpleado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_LES_estado1`
    FOREIGN KEY (`idestado`)
    REFERENCES `proyectolpii`.`estado` (`idestado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `proyectolpii`.`res`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`res` (
  `idRES` INT(11) NOT NULL,
  `referencia` VARCHAR(200) NULL DEFAULT NULL,
  `descriptor` VARCHAR(200) NULL DEFAULT NULL,
  `objetoConsulta` VARCHAR(500) NULL DEFAULT NULL,
  `analisis` VARCHAR(500) NULL DEFAULT NULL,
  `fechaGenerado` DATETIME NULL DEFAULT NULL,
  `idLES` CHAR(6) NOT NULL,
  `idestado` INT(11) NOT NULL,
  `idAsalariado` CHAR(6) NOT NULL,
  `pdf` LONGBLOB NOT NULL,
  PRIMARY KEY (`idRES`),
  INDEX `fk_RES_LES1_idx` (`idLES` ASC),
  INDEX `fk_RES_estado1_idx` (`idestado` ASC),
  INDEX `fk_RES_Asalariado1_idx` (`idAsalariado` ASC),
  CONSTRAINT `fk_RES_Asalariado1`
    FOREIGN KEY (`idAsalariado`)
    REFERENCES `proyectolpii`.`empleado` (`idEmpleado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RES_estado1`
    FOREIGN KEY (`idestado`)
    REFERENCES `proyectolpii`.`estado` (`idestado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RES_LES1`
    FOREIGN KEY (`idLES`)
    REFERENCES `proyectolpii`.`les` (`idLES`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `proyectolpii`.`asa_res`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`asa_res` (
  `idAsalariado` CHAR(6) NOT NULL,
  `idRES` INT(11) NOT NULL,
  `fechaAprob` DATETIME NOT NULL,
  `pdf` LONGBLOB NOT NULL,
  PRIMARY KEY (`idAsalariado`, `idRES`),
  INDEX `fk_Asalariado_has_RES_RES1_idx` (`idRES` ASC),
  INDEX `fk_Asalariado_has_RES_Asalariado1_idx` (`idAsalariado` ASC),
  CONSTRAINT `fk_Asalariado_has_RES_Asalariado1`
    FOREIGN KEY (`idAsalariado`)
    REFERENCES `proyectolpii`.`empleado` (`idEmpleado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Asalariado_has_RES_RES1`
    FOREIGN KEY (`idRES`)
    REFERENCES `proyectolpii`.`res` (`idRES`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `proyectolpii`.`unidadorganica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`unidadorganica` (
  `idUnidadOrganica` CHAR(5) NOT NULL,
  `descripcion` VARCHAR(45) NOT NULL,
  `idCargo` CHAR(6) NOT NULL,
  `nombreUnidad` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idUnidadOrganica`),
  INDEX `fk_UnidadOrganica_Cargo1_idx` (`idCargo` ASC),
  CONSTRAINT `fk_UnidadOrganica_Cargo1`
    FOREIGN KEY (`idCargo`)
    REFERENCES `proyectolpii`.`cargo` (`idCargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `proyectolpii`.`equipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`equipo` (
  `idEquipo` CHAR(6) NOT NULL,
  `nombreEquipo` VARCHAR(45) NOT NULL,
  `idUnidadOrganica` CHAR(5) NOT NULL,
  `descripcionEquipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEquipo`),
  INDEX `fk_Equipo_UnidadOrganica1_idx` (`idUnidadOrganica` ASC),
  CONSTRAINT `fk_Equipo_UnidadOrganica1`
    FOREIGN KEY (`idUnidadOrganica`)
    REFERENCES `proyectolpii`.`unidadorganica` (`idUnidadOrganica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `proyectolpii`.`cargo_equipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `proyectolpii`.`cargo_equipo` (
  `idCargo` CHAR(6) NOT NULL,
  `idEquipo` CHAR(6) NOT NULL,
  `esJefe` TINYINT(1) NOT NULL,
  PRIMARY KEY (`idCargo`, `idEquipo`),
  INDEX `fk_Cargo_has_Equipo_Equipo1_idx` (`idEquipo` ASC),
  INDEX `fk_Cargo_has_Equipo_Cargo1_idx` (`idCargo` ASC),
  CONSTRAINT `fk_Cargo_has_Equipo_Cargo1`
    FOREIGN KEY (`idCargo`)
    REFERENCES `proyectolpii`.`cargo` (`idCargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Cargo_has_Equipo_Equipo1`
    FOREIGN KEY (`idEquipo`)
    REFERENCES `proyectolpii`.`equipo` (`idEquipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

USE `proyectolpii` ;

-- -----------------------------------------------------
-- function FN_VERIFICAR_PERSONA
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `FN_VERIFICAR_PERSONA`(idUsuario char(6),dni char(8)
) RETURNS char(2) CHARSET utf8
BEGIN
	
    declare respuesta char(2);
    
	IF EXISTS(SELECT * FROM empleado where idEmpleado=idUsuario and nDNI=dni) then
		set respuesta='SI';
    else
		set respuesta='NO';
    end if;
	return respuesta;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function F_ELIMINAUNIDAORGANICA
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `F_ELIMINAUNIDAORGANICA`(
idUnidad char(5),
idCar char(6)
) RETURNS text CHARSET utf8
BEGIN

	declare mensaje text(200);

if exists(select * from empleado where idCargo=idCar ) or  exists(select * from equipo where idUnidadOrganica=idUnidad) then

	set mensaje='No se puede eliminar/ Esta unidad tiene empleados o equipos';
else
		
	DELETE FROM unidadorganica
	WHERE idUnidadOrganica=idUnidad;

	DELETE FROM cargo
	WHERE idCargo=idCar;
		set mensaje = 'Se elimino correctamente';

end if;
	return mensaje;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function F_REGISTRA_CARGO_ROL_DE_EQUIPO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `F_REGISTRA_CARGO_ROL_DE_EQUIPO`(
nombreCargo varchar(45),
suel double,
gestionarLES01 tinyint(1),
gestionarRES01 tinyint(1), 
verificarLES01 tinyint(1) ,
verificarRES01 tinyint(1) ,
visarRES01 tinyint(1) ,
listarLES01 tinyint(1) ,
listarRES01 tinyint(1) ,
mantenimiento01 tinyint(1) ,
reporte01 tinyint(1)
) RETURNS char(6) CHARSET utf8
BEGIN
	declare idRo char (5);
    declare num03 int unsigned default 0;
    
	declare idCar char (6);
    declare num01 int unsigned default 0;
    
    ###### VERIFICAR SI EXISTE ROL
    
	if exists(
	select * from rol where gestionarLES=gestionarLES01 and gestionarRES=gestionarRES01 and verificarLES=verificarLES01 and 
	verificarRES=verificarRES01 and visarRES=visarRES01 and listarLES=listarLES01 and listarRES=listarRES01 and mantenimiento=mantenimiento01 and reporte=reporte01) then

	select idRol into idRo from rol where gestionarLES=gestionarLES01 and gestionarRES=gestionarRES01 and verificarLES=verificarLES01 and 
	verificarRES=verificarRES01 and visarRES=visarRES01 and listarLES=listarLES01 and listarRES=listarRES01 and mantenimiento=mantenimiento01 and reporte=reporte01;

	else  
		  ##### REGISTRO ROL
		SELECT idRol into idRo FROM rol order by idRol desc limit 1;
		select cast((substring(idRo,3,3)) as unsigned) + 1 into num03;
		
		if num03<10 then
			select concat('RL00',num03) into idRo;
		elseif num03<100 then
			select concat('RL0',num03) into idRo;
		elseif num03<1000 then
			select concat('RL',num03) into idRo;
		end if;
		
		INSERT INTO `Rol`(`idRol`,`gestionarLES`,`gestionarRES`,`verificarLES`,`verificarRES`,`visarRES`,`listarLES`,`listarRES`,`mantenimiento`,`reporte`) 
							 VALUES (idRo,gestionarLES01,gestionarRES01,verificarLES01,verificarRES01,visarRES01,listarLES01,listarRES01,mantenimiento01,reporte01);
	end if;
    
    ##### REGISTRO CARGO DE EQUIPOS
    SELECT idCargo into idCar FROM CARGO order by idCargo desc limit 1;
    select cast((substring(idCar,2,5)) as unsigned) + 1 into num01;
    
    if num01<10 then
		select concat('C0000',num01) into idCar;
	elseif num01<100 then
		select concat('C000',num01) into idCar;
	elseif num01<1000 then
		select concat('C00',num01) into idCar;
	elseif num01<10000 then
		select concat('C0',num01) into idCar;
	elseif num01<100000 then
		select concat('C',num01) into idCar;
    end if;
    
    INSERT INTO `Cargo`(`idCargo`,`descripcion`,`sueldo`,`idRol`) 
    VALUES (idCar, nombreCargo, suel,idRo);
    
    RETURN idCar;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function F_REGISTRA_EQUIPO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `F_REGISTRA_EQUIPO`(
nomEqui varchar(45),
idUnidad char(5),
descEquipo varchar(45)
) RETURNS char(6) CHARSET utf8
BEGIN

	declare idEqui char(6);
    declare num01 int unsigned default 0;
    
	SELECT idEquipo into idEqui FROM equipo order by idEquipo desc limit 1;
    select cast((substring(idEqui,3,4)) as unsigned) + 1 into num01;
    
    if num01<10 then
		select concat('EQ000',num01) into idEqui;
	elseif num01<100 then
		select concat('EQ00',num01) into idEqui;
	elseif num01<1000 then
		select concat('EQ0',num01) into idEqui;
	elseif num01<10000 then
		select concat('EQ',num01) into idEqui;
    end if;
    
    INSERT INTO equipo VALUES (idEqui, nomEqui, idUnidad,descEquipo);
    
    return idEqui;
    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_ACTUALIZAEMPLEADO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_ACTUALIZAEMPLEADO`( 
	id char(6),
    dni char(8),
  nom varchar(45) ,
  apellidoP varchar(45) ,
  apellidoM varchar(45) ,
  fechaNacimiento date ,
  telefono char(11) ,
  seguroSocial char(11) ,
  idCargo char(6) ,
  idestado int(11) , 
 #foto mediumblob,
  fechaIngreso date ,
  usuario varchar(45) ,
  password varchar(45))
begin
UPDATE `empleado`
SET
`nDNI` = dni,
`nombre` = nom,
`apellidoP` = apellidoP,
`apellidoM` = apellidoM,
`fechaNacimiento` = fechaNacimiento,
`telefono` = telefono,
`seguroSocial` = seguroSocial,
`idCargo` =  idCargo,
`idestado` = idestado,
#`foto` = foto,
`fechaIngreso` = fechaIngreso,
`usuario` = usuario,
`password` = password  
WHERE `idEmpleado` = id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_ACTUALIZARLES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_ACTUALIZARLES`(idL CHAR(6),IdEst int)
begin
UPDATE `les`
SET
`idestado` = IdEst
where 
`idLES` = idL;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_ACTUALIZARRES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_ACTUALIZARRES`(
idR int,
objetoConsulta varchar(500),
analisis varchar(500)
)
begin
declare idEst int;
select idestado into idEst from `estado` where descripcion='Actualizado';
UPDATE `res`
SET
`objetoConsulta` = objetoConsulta,
`analisis` = analisis,
`idestado` = IdEst
where `idRES` = idR;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_ACTUALIZA_EQUIPO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_ACTUALIZA_EQUIPO`(
idEq varchar(6),
nomEq varchar(45),
descr varchar(45)
)
begin

UPDATE equipo
SET
nombreEquipo=nomEq,
descripcionEquipo=descr
WHERE idEquipo=idEq;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_ACTUALIZA_ESTADO_RES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_ACTUALIZA_ESTADO_RES`(codRES int , codEstado int)
begin     
    UPDATE res 
    set 
    idestado = codEstado
    where idRES=codRES;

end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_ACTUALIZA_ESTADO_VISADO_RES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_ACTUALIZA_ESTADO_VISADO_RES`(codRES int , idAprobador varchar(6),codEstado int, pdf02 longblob,fecha varchar(19))
begin     
	if codEstado=9 then
    
		UPDATE res 
		set 
		idestado = codEstado,
		pdf=pdf02
		where idRES=codRES;
		
		insert into asa_res(`idAsalariado`,`idRES`,`fechaAprob`,`pdf`) values(idAprobador,codRES,fecha,pdf02);
 	
    else
		UPDATE res 
		set 
		idestado = codEstado
		where idRES=codRES;
    end if;

end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_ELIMINAEMPLEADO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_ELIMINAEMPLEADO`( 
	id char(6))
begin
DELETE FROM `empleado`
WHERE `idEmpleado`=id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_ELIMINA_CARGO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_ELIMINA_CARGO`(
idCar varchar(6)
)
begin

DELETE FROM cargo_equipo
WHERE idCargo=idCar;

DELETE FROM cargo
WHERE idCargo=idCar;


END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_ELIMINA_EQUIPO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_ELIMINA_EQUIPO`(
idEq varchar(6)
)
begin
	DELETE FROM equipo
	WHERE idEquipo=idEq;
    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_EXISTE_LES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_EXISTE_LES`(id char(6))
BEGIN
declare estado char(13);
declare div_clase  varchar(50);
declare icono  varchar(50);
declare flag char(20);
if exists(select * from les where idEmpleado=id and idestado=3 ) then
     select 'display:none;' into flag;
     select e.descripcion into estado from les l,estado e where l.idestado=e.idestado and l.idEmpleado=id and e.idestado=3 ;
	 select 'errorHandler alert alert-danger no-display' into div_clase;
     select 'fa fa-times-circle-o' into icono;
     select div_clase,icono,'No puedes  generar LES  : ',estado,flag;
end if;
if exists(select * from les where idEmpleado=id and idestado=4 ) then
     select 'display:none;' into flag;
     select e.descripcion into estado from les l,estado e where l.idestado=e.idestado and l.idEmpleado=id and e.idestado=4 ;
	 select 'errorHandler alert alert-danger no-display' into div_clase;
     select 'fa fa-times-circle-o' into icono;
     select div_clase,icono,'Todavia no puedes generar una LES  : ',estado,flag;
end if;
if exists(select * from les where idEmpleado=id and idestado=5 ) then
     select 'display:block;' into flag;
     select e.descripcion into estado from les l,estado e where l.idestado=e.idestado and l.idEmpleado=id and e.idestado=5 ;
	 select 'successHandler alert alert-warning no-display' into div_clase;
     select 'fa fa-warning' into icono;
     select div_clase,icono,'Debes de modificar LES  : ',estado,flag;
end if;
if exists(select * from les where idEmpleado=id and idestado=6 ) then
     select 'display:none;' into flag;
     select e.descripcion into estado from les l,estado e where l.idestado=e.idestado and l.idEmpleado=id and e.idestado=6 ;
	 select 'successHandler alert alert-warning no-display' into div_clase;
     select 'fa fa-warning' into icono;
     select div_clase,icono,'LES en proceso : ',estado,flag;
end if;
if exists(select * from les where idEmpleado=id and idestado=7 order by idLES desc limit 1 ) then
     select 'display:block;' into flag;
     select e.descripcion into estado from les l,estado e where l.idestado=e.idestado and l.idEmpleado=id and e.idestado=7 order by idLES desc limit 1 ;
	 select 'errorHandler alert alert-danger no-display' into div_clase;
     select 'fa fa-times-circle-o' into icono;
     select div_clase,icono,'Puedes generar una LES ',estado,flag;
end if;
if exists(select * from les where idEmpleado=id and idestado=8 order by idLES desc limit 1) then
     select 'display:block;' into flag;
     select e.descripcion into estado from les l,estado e where l.idestado=e.idestado and l.idEmpleado=id and e.idestado=8 order by idLES desc limit 1 ;
	 select 'successHandler alert alert-success no-display' into div_clase;
     select 'fa fa-check' into icono;   
     select div_clase,icono,'Puedes generar una LES ',estado,flag;
end if;
if not exists(select * from les where idEmpleado=id ) then
	 select 'display:block;' into flag;
     select ' ' into estado;
     select 'successHandler alert alert-success no-display' into div_clase;
     select 'fa fa-check' into icono; 
     select div_clase,icono,'Puedes generar una LES ',estado,flag;
end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_GENERAR_LES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_GENERAR_LES`(
	diagnostico VARCHAR(200) ,
  fechaInicioDes DATE ,
  fechaFinDes DATE ,
  cantidad int,
  documento BLOB ,
  motivoLicencia VARCHAR(45) ,
   desc_motivoLicencia VARCHAR(45) ,
  fechaHora datetime,
  idEmpleado CHAR(6),
  pdf varchar(200))
begin
declare id char(6);
declare num char(4);
declare idEst int;
select idLES into id from les  order by idLES desc limit 1;
select cast((substring(id,4,3)) as unsigned) + 1 into num;

if (select count(*) from les where idLES=id)=0  then 
    select 'LES001' into id;	
elseif num < 10 
then 
	select concat('LES00',num) into id;	
elseif num <100 then
	select concat('LES0',num) into id;	
else 
 select concat('LES',num) into id;		
end if;
select idestado into idEst from estado where descripcion='Generado';
INSERT INTO `les`(`idLES`,`diagnostico`,`fechaInicioDes`,`fechaFinDes`,`cantDias`,`documento`,`motivoLicencia`,`descripcionMotivo`,`fechaHora`,`idEmpleado`,`idestado`,`pdf`)
VALUES (id,diagnostico,fechaInicioDes,fechaFinDes,cantidad,documento,motivoLicencia,desc_motivoLicencia,fechaHora,idEmpleado,idEst,pdf);
    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LESxCODIGO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LESxCODIGO`(id char(6))
begin
SELECT l.idLes, l.diagnostico, l.fechaInicioDes, l.fechafindes, l.motivolicencia, l.descripcionmotivo,l.fechaHora,l.idEmpleado, concat(e.nombre,' ',e.apellidoP,' ',e.apellidoM),l.pdf as 'Empleado'FROM `les` l join `empleado` e on l.idEmpleado = e.idEmpleado  where l.idLes=id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTACARGOXNOMBRE
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTACARGOXNOMBRE`(nombre varchar(45))
BEGIN
	declare id char(6);
    declare equipo varchar(20);
    select 'A fuera de Equipo' into equipo;
    select idCargo into id from cargo where descripcion=nombre;
	if exists(select  c.descripcion,c.sueldo,uo.nombreUnidad from cargo c, unidadorganica uo where c.idCargo=uo.idCargo and c.idCargo=id) then
	select  c.descripcion,c.sueldo,uo.nombreUnidad,equipo from cargo c, unidadorganica uo where c.idCargo=uo.idCargo and c.idCargo=id;
    end if;
	if exists(select c.descripcion,c.sueldo,e.nombreEquipo,uo.nombreUnidad from cargo c, cargo_equipo ce,equipo e, unidadorganica uo where ce.idCargo=c.idCargo and ce.idEquipo=e.idEquipo and e.idUnidadOrganica=uo.idUnidadOrganica and c.idCargo=id) then    
	select c.descripcion,c.sueldo,uo.nombreUnidad,e.nombreEquipo from cargo c, cargo_equipo ce,equipo e, unidadorganica uo where ce.idCargo=c.idCargo and ce.idEquipo=e.idEquipo 
    and e.idUnidadOrganica=uo.idUnidadOrganica and c.idCargo=id;
    end if;
    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTAEMPLEADO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTAEMPLEADO`()
begin
SELECT e.idEmpleado,e.nDNI,concat(e.nombre,' ',e.apellidoP,' ',e.apellidoM) as 'Empleado',e.fechaNacimiento,e.telefono,e.seguroSocial,
c.descripcion,et.descripcion,e.foto,e.fechaIngreso,e.usuario,e.password FROM `empleado` e ,`cargo` c, `estado` et where e.idCargo=c.idCargo and e.idestado=et.idestado;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTAEMPLEADOxCODIGO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTAEMPLEADOxCODIGO`(id char(6))
begin
SELECT idEmpleado,nDNI,nombre,apellidoP,apellidoM,fechaNacimiento,telefono,seguroSocial,idCargo,idestado,fechaIngreso,usuario,password FROM `empleado` where `idEmpleado`=id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTALES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTALES`()
begin
SELECT l.idLes, l.diagnostico, l.fechaInicioDes, l.fechafindes, l.motivolicencia, l.descripcionmotivo,l.fechaHora, concat(e.nombre,' ',e.apellidoP,' ',e.apellidoM) as 'Empleado',et.descripcion FROM `les` l ,`empleado` e, `estado` et where l.idEmpleado = e.idEmpleado and l.idestado=et.idestado;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTALESXCODIGO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTALESXCODIGO`(id char(6))
begin
SELECT l.idLes, l.diagnostico, l.fechaInicioDes, l.fechafindes, l.motivolicencia, l.descripcionmotivo,l.fechaHora, 
concat(e.nombre,' ',e.apellidoP,' ',e.apellidoM) as 'Empleado',et.descripcion 
FROM `les` l ,`empleado` e, `estado` et where l.idEmpleado = e.idEmpleado and l.idestado=et.idestado and e.idEmpleado=id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTARESxCODIGO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTARESxCODIGO`(id int)
begin
SELECT idRes,referencia,descriptor,objetoConsulta,analisis,fechaGenerado,idLES,idAsalariado FROM `res` where `idRes`=id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTARESxFECHAS
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTARESxFECHAS`(fecha1 datetime, fecha2 datetime, idEst int)
begin
SELECT r.idRes,r.referencia,r.descriptor,r.objetoConsulta,r.analisis,r.fechaGenerado,r.idLES,e.descripcion,r.idAsalariado FROM `res` r join `estado` e on r.idestado=e.idestado where r.idestado=idEst and  r.fechaGenerado between fecha1 and fecha2;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTAROL
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTAROL`(idCar varchar(100))
BEGIN
	declare rol char(6);    
    declare gLES varchar(15);
    declare gRES varchar(15);
    declare eLES varchar(15);
    declare eRES varchar(15);
    declare lLES varchar(15);
    declare lRES varchar(15);
    declare mant varchar(15);
    declare rprt varchar(15);
    declare vsrRES varchar(15);
    select idRol into rol from cargo where descripcion=idCar;
    #GESTIONAR LES
    if(select gestionarLES from rol where idRol=rol)=1 then
		select 'display:block;' into gLES;
	else
		select 'display:none;' into gLES;
    END IF; 
    #GESTIONAR RES
    if(select gestionarRES from rol where idRol=rol)=1 then
		select 'display:block;' into gRES;
	else
		select 'display:none;' into gRES;
    END IF; 
    #VERIFICAR LES
    if(select verificarLES from rol where idRol=rol)=1 then
		select 'display:block;' into eLES;
	else
		select 'display:none;' into eLES;
    END IF; 
    #VERIFICAR RES
    if(select verificarRES from rol where idRol=rol)=1 then
		select 'display:block;' into eRES;
	else
		select 'display:none;' into eRES;
    END IF; 
    #VISAR RES
    if(select visarRES from rol where idRol=rol)=1 then
		select 'display:block;' into vsrRES;
	else
		select 'display:none;' into vsrRES;
    END IF; 
    #LISTAR LES
    if(select listarRES from rol where idRol=rol)=1 then
		select 'display:block;' into lLES;
	else
		select 'display:none;' into lLES;
    END IF;
    #LISTAR RES
    if(select listarRES from rol where idRol=rol)=1 then
		select 'display:block;' into lRES;
	else
		select 'display:none;' into lRES;
    END IF;
    #MANTENIMIENTO
    if(select mantenimiento from rol where idRol=rol)=1 then
		select 'display:block;' into mant;
	else
		select 'display:none;' into mant;
    END IF; 
    #REPORTE
    if(select reporte from rol where idRol=rol)=1 then
		select 'display:block;' into rprt;
	else
		select 'display:none;' into rprt;
    END IF; 
    # select gLES,gRES,eLES,eRES,lLES,lRES,mant,rprt,vsrRES from rol where idRol=rol;
    select gLES,gRES,eLES,eRES,vsrRES,lLES,lRES,mant,rprt from rol where idRol=rol;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTAR_LESX2ESTADOS
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTAR_LESX2ESTADOS`(
)
begin
select l.idLES, l.diagnostico,l.fechaInicioDes,l.fechaFinDes,l.cantDias,l.motivoLicencia,l.descripcionMotivo,concat(ep.nombre,' ',ep.apellidoP)'Empleado',e.descripcion from les l,empleado ep, estado e where l.idestado=e.idestado and l.idEmpleado=ep.idEmpleado and e.descripcion in ('Generado','Actualizado');
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTAR_LESXESTADO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTAR_LESXESTADO`(
estado varchar(45))
begin
select l.idLES, l.diagnostico,l.fechaInicioDes,l.fechaFinDes,l.cantDias,l.motivoLicencia,l.descripcionMotivo from les l, estado e where l.idestado=e.idestado and e.descripcion=estado;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTA_CARGOxEQUIPOS
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTA_CARGOxEQUIPOS`(
idEqu varchar(6)
)
begin

select d.idCargo 'idCargo', c.descripcion 'nomCargo',c.sueldo 'sueldo',r.gestionarLES 'gestionarLES',
r.gestionarRES 'gestionarRES', r.verificarLES 'verificarLES',r.verificarRES 'verificarRES',
r.visarRES 'visarRES',r.listarLES 'listarLES',r.listarRES 'listarRES',
r.mantenimiento 'mantenimiento',r.reporte 'reporte' from cargo_equipo d inner join cargo c
on d.idCargo=c.idCargo inner join rol r 
on c.idRol=r.idRol
where d.idEquipo=idEqu;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTA_EQUIPOS
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTA_EQUIPOS`()
begin

select e.idEquipo 'idEquipo',e.nombreEquipo 'nombreEquipo',e.descripcionEquipo 'descripcionEquipo',
e.idUnidadOrganica 'idUnidadOrganica', count(c.idCargo) 'cantidadCargo'
from equipo e inner join cargo_equipo c on e.idEquipo=c.idEquipo
group by idEquipo,nombreEquipo,descripcionEquipo,idUnidadOrganica;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTA_EQUIPOSxCODIGO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTA_EQUIPOSxCODIGO`(
id varchar(6)
)
begin

select idEquipo ,nombreEquipo,descripcionEquipo, idUnidadOrganica 
from equipo where idEquipo=id;


END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTA_UNIDADORGANICA
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTA_UNIDADORGANICA`()
begin
SELECT u.idUnidadOrganica 'idUnidadOrganica',u.nombreUnidad 'nombreUnidad',u.descripcion 'descripcion',u.idCargo 'idCargo' , c.descripcion 'descripcion',
r.idRol 'idRol',count(e.idEquipo) 'num' FROM unidadorganica u left join equipo e
on u.idUnidadOrganica=e.idUnidadOrganica inner join cargo c on u.idCargo=c.idCargo inner join rol r on c.idRol=r.idRol
group by u.idUnidadOrganica,u.nombreUnidad,u.descripcion,u.idCargo , c.descripcion,r.idRol;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTA_UNIDADORGANICAxCODIGO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTA_UNIDADORGANICAxCODIGO`(id char(5))
begin
SELECT u.idUnidadOrganica,u.nombreUnidad,u.descripcion,c.idCargo,c.descripcion,
c.sueldo, r.gestionarLES,r.gestionarRES,r.verificarLES,r.verificarRES,r.visarRES,r.listarLES,r.listarRES,r.mantenimiento,
r.reporte
 FROM unidadorganica u inner join cargo c
on u.idCargo=c.idCargo inner join rol r 
on c.idRol=r.idRol
where u.idUnidadOrganica=id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_LISTA_VISAR_RES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LISTA_VISAR_RES`(id int)
begin
	declare num01 int unsigned default 0;
    
		IF (select count(idRes) from asa_res where idRes=id)=1 then
			SELECT a.idRES,concat(e.nombre,' ',e.apellidoP,' ',e.apellidoM) as nombre,a.fechaAprob,es.descripcion FROM asa_res a inner join empleado e
			on a.idAsalariado=e.idEmpleado inner join res r on r.idRES=a.idRES inner join estado es on r.idestado=es.idestado
            where a.idRES=id;
		else
			select idAsalariado from asa_res where idRES=id;
        end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_MODIFICAR_LES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MODIFICAR_LES`(
idL char(6),
	diagnostico VARCHAR(200) ,
  fechaInicioDes DATE ,
  fechaFinDes DATE ,
  cantidad int,
  motivoLicencia VARCHAR(45) ,
   desc_motivoLicencia VARCHAR(45) ,
  fechaHora datetime)
begin
declare idEst int;
select idestado into idEst from estado where descripcion='Actualizado';
UPDATE `les`
SET
`diagnostico` = diagnostico,
`fechaInicioDes` = fechaInicioDes,
`fechaFinDes` = fechaFinDes,
`cantDias` = cantDias,
`motivoLicencia` = motivoLicencia,
`descripcionMotivo` = desc_motivoLicencia,
`idEstado`=idEst,
`fechaHora` = fechaHora
WHERE `idLES` = idL; 
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_MODIFICA_UNIDADORGANICA
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_MODIFICA_UNIDADORGANICA`(
idUnidad char(5),
descripcionUnidad varchar(45), 
nombreUni varchar(45),
idCar char(6),
nombreCargo varchar(45), 
sueldo double ,
gestionarLES01 tinyint(1),
gestionarRES01 tinyint(1), 
verificarLES01 tinyint(1) ,
verificarRES01 tinyint(1) ,
visarRES01 tinyint(1) ,
listarLES01 tinyint(1) ,
listarRES01 tinyint(1) ,
mantenimiento01 tinyint(1) ,
reporte01 tinyint(1)
)
BEGIN

declare idRo char (5);
declare num03 int unsigned default 0;

	if exists(
	select * from rol where gestionarLES=gestionarLES01 and gestionarRES=gestionarRES01 and verificarLES=verificarLES01 and 
	verificarRES=verificarRES01 and visarRES=visarRES01 and listarLES=listarLES01 and listarRES=listarRES01 and mantenimiento=mantenimiento01 and reporte=reporte01) then

	select idRol into idRo from rol where gestionarLES=gestionarLES01 and gestionarRES=gestionarRES01 and verificarLES=verificarLES01 and 
	verificarRES=verificarRES01 and visarRES=visarRES01 and listarLES=listarLES01 and listarRES=listarRES01 and mantenimiento=mantenimiento01 and reporte=reporte01;

	else  
	 
		  ##### REGISTRO ROL
		
		SELECT idRol into idRo FROM rol order by idRol desc limit 1;
		select cast((substring(idRo,3,3)) as unsigned) + 1 into num03;
		
		if num03<10 then
			select concat('RL00',num03) into idRo;
		elseif num03<100 then
			select concat('RL0',num03) into idRo;
		elseif num03<1000 then
			select concat('RL',num03) into idRo;
		end if;
		
		INSERT INTO `Rol`(`idRol`,`gestionarLES`,`gestionarRES`,`verificarLES`,`verificarRES`,`visarRES`,`listarLES`,`listarRES`,`mantenimiento`,`reporte`) 
							 VALUES (idRo,gestionarLES01,gestionarRES01,verificarLES01,verificarRES01,visarRES01,listarLES01,listarRES01,mantenimiento01,reporte01);
     
	end if;


UPDATE cargo
SET
descripcion = nombreCargo,
sueldo = sueldo,
idRol = idRo
WHERE idCargo= idCar;

UPDATE unidadorganica
SET
descripcion = descripcionUnidad,
nombreUnidad = nombreUni
WHERE idUnidadOrganica = idUnidad;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_PRUEBA
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_PRUEBA`(codEstado int)
begin     

	if codEstado=9 then
		select * from asa_res;
    else
		select * from res;
    end if;

 

end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_REGISTRAEMPLEADO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_REGISTRAEMPLEADO`( 
	dni char(8),
  nom varchar(45) ,
  apellidoP varchar(45) ,
  apellidoM varchar(45) ,
  fechaNacimiento date ,
  telefono char(11) ,
  seguroSocial char(11) ,
  idCargo char(6) ,
  idestado int(11) ,
  foto mediumblob,
  fechaIngreso date ,
  usuario varchar(45) ,
  password varchar(45))
begin
declare id char(6);
declare num char(4);
select idEmpleado into id from empleado  order by idEmpleado desc limit 1;
select cast((substring(id,3,4)) as unsigned) + 1 into num;
IF num < 10 
then 
	select concat('EM000',num) into id;	
elseif num <100 then
	select concat('EM00',num) into id;	
elseif num<1000 then
 select concat('EM0',num) into id;	
 else  select concat('EM',num) into id;	
end if;

INSERT INTO `empleado`(`idEmpleado`,`nDNI`,`nombre`,`apellidoP`,`apellidoM`,`fechaNacimiento`,`telefono`,`seguroSocial`,`idCargo`,`idestado`,`foto`,`fechaIngreso`,`usuario`,`password`)
VALUES
(id,dni,nom,apellidoP,apellidoM,  fechaNacimiento ,  telefono ,  seguroSocial ,  idCargo ,  idestado ,  foto ,  fechaIngreso ,  usuario ,  password );
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_REGISTRARES
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_REGISTRARES`( 
  referencia VARCHAR(200) ,
  descriptor VARCHAR(200) ,
  objetoConsulta VARCHAR(500) ,
  analisis VARCHAR(500) ,
  fechaGenerado DATETIME ,
  idLES CHAR(6),
  idAsalariado char(6)
)
begin
declare id int;
declare num int;
declare idEst int;
select idRes into num from res  order by idRes desc limit 1;
if (select count(*) from res where idRes=num)=0 then
	select 1 into id;
else select num + 1 into id;
end if;

select idestado into idEst from estado where descripcion='Generado';
INSERT INTO `res`(`idRES`,`referencia`,`descriptor`,`objetoConsulta`,`analisis`,`fechaGenerado`,`idLES`,`idestado`,`idAsalariado`)
VALUES
(id,referencia,descriptor,objetoConsulta,analisis,fechaGenerado,idLES,idEst,idAsalariado);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_REGISTRA_CARGO_EQUIPO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_REGISTRA_CARGO_EQUIPO`(
idCar char(6),
idEqui char(6)
)
begin

	insert into cargo_equipo values(idCar,idEqui,0);
	
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_REGISTRA_UNIDADORGANICA
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_REGISTRA_UNIDADORGANICA`(
descripcionUnidad varchar(45), 
nombreUnidad varchar(45),
nombreCargo varchar(45), 
sueldo double,
gestionarLES01 tinyint(1),
gestionarRES01 tinyint(1), 
verificarLES01 tinyint(1) ,
verificarRES01 tinyint(1) ,
visarRES01 tinyint(1) ,
listarLES01 tinyint(1) ,
listarRES01 tinyint(1) ,
mantenimiento01 tinyint(1) ,
reporte01 tinyint(1)
)
BEGIN
	declare idRo char (5);
    declare num03 int unsigned default 0;
    
	declare idCar char (6);
    declare num01 int unsigned default 0;
    
    declare idUni char (5);
    declare num02 int unsigned default 0;
    
    ###### VERIFICAR SI EXISTE ROL
    
	if exists(
	select * from rol where gestionarLES=gestionarLES01 and gestionarRES=gestionarRES01 and verificarLES=verificarLES01 and 
	verificarRES=verificarRES01 and visarRES=visarRES01 and listarLES=listarLES01 and listarRES=listarRES01 and mantenimiento=mantenimiento01 and reporte=reporte01) then

	select idRol into idRo from rol where gestionarLES=gestionarLES01 and gestionarRES=gestionarRES01 and verificarLES=verificarLES01 and 
	verificarRES=verificarRES01 and visarRES=visarRES01 and listarLES=listarLES01 and listarRES=listarRES01 and mantenimiento=mantenimiento01 and reporte=reporte01;

	else  
	 
		  ##### REGISTRO ROL
		
		SELECT idRol into idRo FROM rol order by idRol desc limit 1;
		select cast((substring(idRo,3,3)) as unsigned) + 1 into num03;
		
		if num03<10 then
			select concat('RL00',num03) into idRo;
		elseif num03<100 then
			select concat('RL0',num03) into idRo;
		elseif num03<1000 then
			select concat('RL',num03) into idRo;
		end if;
		
		INSERT INTO `Rol`(`idRol`,`gestionarLES`,`gestionarRES`,`verificarLES`,`verificarRES`,`visarRES`,`listarLES`,`listarRES`,`mantenimiento`,`reporte`) 
							 VALUES (idRo,gestionarLES01,gestionarRES01,verificarLES01,verificarRES01,visarRES01,listarLES01,listarRES01,mantenimiento01,reporte01);
     
	end if;
    
    ##### REGISTRO CARGO DE DIRECTOR
    
    SELECT idCargo into idCar FROM CARGO order by idCargo desc limit 1;
    select cast((substring(idCar,2,5)) as unsigned) + 1 into num01;
    
    if num01<10 then
		select concat('C0000',num01) into idCar;
	elseif num01<100 then
		select concat('C000',num01) into idCar;
	elseif num01<1000 then
		select concat('C00',num01) into idCar;
	elseif num01<10000 then
		select concat('C0',num01) into idCar;
	elseif num01<100000 then
		select concat('C',num01) into idCar;
    end if;
    
    INSERT INTO `Cargo`(`idCargo`,`descripcion`,`sueldo`,`idRol`) 
    VALUES (idCar, nombreCargo, sueldo,idRo);
    
    ## REGISTRO UNIDAD ORGANICA##
    
    SELECT idUnidadOrganica into idUni FROM unidadorganica order by idUnidadOrganica desc limit 1;
    select cast((substring(idUni,2,4)) as unsigned) + 1 into num02;
    
    if num02<10 then
		select concat('U000',num02) into idUni;
	elseif num02<100 then
		select concat('U00',num02) into idUni;
	elseif num02<1000 then
		select concat('U0',num02) into idUni;
	elseif num02<10000 then
		select concat('U',num02) into idUni;
    end if;
    
    INSERT INTO `UnidadOrganica`(`idUnidadOrganica`,`descripcion`,`idCargo`,`nombreUnidad`) 
    VALUES (idUni,descripcionUnidad,idCar,nombreUnidad);
    
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_RESxCODIGO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_RESxCODIGO`(codRES int)
BEGIN 
    SELECT idRES,referencia,descriptor,objetoConsulta,analisis,fechaGenerado,idLES,idAsalariado,pdf FROM Res where idRES=codRES;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_VALIDAUSUARIO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_VALIDAUSUARIO`(usu varchar(45),pass varchar(45))
BEGIN
	SELECT e.idEmpleado,e.nDNI,e.nombre,concat(e.apellidoP,' ',e.apellidoM) as 'Empleado',e.fechaNacimiento,e.telefono,e.seguroSocial,
	c.descripcion,e.foto,e.fechaIngreso,e.usuario,e.password FROM `empleado` e ,`cargo` c where e.idCargo=c.idCargo and e.usuario=usu and e.password=pass;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure SP_VERIFICA_ELIMINA_EQUIPO
-- -----------------------------------------------------

DELIMITER $$
USE `proyectolpii`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_VERIFICA_ELIMINA_EQUIPO`(
idEq char(6)
)
BEGIN

    
if exists(select * from empleado where idcargo in (select idcargo from cargo_equipo where idequipo=idEq))  then

	select 'NO' ;
else
		select idcargo from cargo_equipo where idequipo=idEq;

end if;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
